@model EntityLayer.Concrete.Writer

@{
    ViewBag.Title = "AddWriter";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h1>Yeni Yazar Ekleme</h1>
<br />

@using (Html.BeginForm("AddWriter", "Writer", FormMethod.Post))
{
<div class="form-group">
    @Html.Label("Yazar Adı")
    @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterName)
    <br />
    @Html.Label("Yazar Soyadı")
    @Html.TextBoxFor(x => x.WriterSurName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterSurName)
    <br /> 
    @Html.Label("Yazar Maili")
    @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterMail)
    <br />
    @Html.Label("Yazar Şifresi")
    @Html.TextBoxFor(x => x.WritePassWord, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WritePassWord)
    <br />
    @Html.Label("Yazar Görsel Linki")
    @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control", @Value = "/AdminLTE-3.0.4/dist/img/2.png" })
    @Html.ValidationMessageFor(x => x.WriterImage)
    <br /> 
    @Html.Label("Yazar Hakkında")
    @Html.TextBoxFor(x => x.WriterAbout, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterAbout)

    <br /> 
    <button class="btn btn-info">Yazarı Ekle</button>


</div>
}

